// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom-schema - ajv compile decoders 1`] = `
"/* eslint-disable */

import Ajv from \"ajv\";

import type { Decoder } from \"./helpers\";
import { validateJson } from \"./validate\";
import type { Screen, ImageComponent, ListerComponent } from \"./models\";
import jsonSchema from \"./schema.json\" assert { type: "json" };

export const ajv = new Ajv({ strict: false });

ajv.compile(jsonSchema);

// Decoders
export const ScreenDecoder: Decoder<Screen> = {
  definitionName: \"Screen\",
  schemaRef: \"#/definitions/Screen\",

  decode(json: unknown): Screen {
    const schema = ajv.getSchema(ScreenDecoder.schemaRef);
    if (!schema) {
      throw new Error(\`Schema \${ScreenDecoder.definitionName} not found\`);
    }
    return validateJson(json, schema, ScreenDecoder.definitionName);
  },
};
export const ImageComponentDecoder: Decoder<ImageComponent> = {
  definitionName: \"ImageComponent\",
  schemaRef: \"#/definitions/ImageComponent\",

  decode(json: unknown): ImageComponent {
    const schema = ajv.getSchema(ImageComponentDecoder.schemaRef);
    if (!schema) {
      throw new Error(
        \`Schema \${ImageComponentDecoder.definitionName} not found\`,
      );
    }
    return validateJson(json, schema, ImageComponentDecoder.definitionName);
  },
};
export const ListerComponentDecoder: Decoder<ListerComponent> = {
  definitionName: \"ListerComponent\",
  schemaRef: \"#/definitions/ListerComponent\",

  decode(json: unknown): ListerComponent {
    const schema = ajv.getSchema(ListerComponentDecoder.schemaRef);
    if (!schema) {
      throw new Error(
        \`Schema \${ListerComponentDecoder.definitionName} not found\`,
      );
    }
    return validateJson(json, schema, ListerComponentDecoder.definitionName);
  },
};
"
`;

exports[`custom-schema - ajv compile helpers.ts 1`] = `
"/* eslint-disable */

export interface Decoder<T> {
  definitionName: string;
  schemaRef: string;
  decode: (json: unknown) => T;
}
"
`;

exports[`custom-schema - ajv compile models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - ajv compile schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;

exports[`custom-schema - no decoders helpers.ts 1`] = `
"/* eslint-disable */

export interface Decoder<T> {
  definitionName: string;
  schemaRef: string;
  decode: (json: unknown) => T;
}
"
`;

exports[`custom-schema - no decoders models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - no decoders schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;

exports[`custom-schema - standalone ES6 decoders index.ts 1`] = `
"/* eslint-disable */

export { ImageComponentDecoder } from \"./ImageComponent/decoder\";
export { ListerComponentDecoder } from \"./ListerComponent/decoder\";
export { ScreenDecoder } from \"./Screen/decoder\";
"
`;

exports[`custom-schema - standalone ES6 merged decoders 1`] = `
"/* eslint-disable */

import { Decoder } from \"./helpers\";
import { validateJson, Validator } from \"./validate\";
import { Screen, ImageComponent, ListerComponent } from \"./models\";
import {
  ScreenValidator,
  ImageComponentValidator,
  ListerComponentValidator,
} from \"./validators\";

export const ScreenDecoder: Decoder<Screen> = {
  definitionName: \"Screen\",
  schemaRef: \"#/definitions/Screen\",

  decode(json: unknown): Screen {
    return validateJson(
      json,
      ScreenValidator as Validator,
      ScreenDecoder.definitionName,
    );
  },
};
export const ImageComponentDecoder: Decoder<ImageComponent> = {
  definitionName: \"ImageComponent\",
  schemaRef: \"#/definitions/ImageComponent\",

  decode(json: unknown): ImageComponent {
    return validateJson(
      json,
      ImageComponentValidator as Validator,
      ImageComponentDecoder.definitionName,
    );
  },
};
export const ListerComponentDecoder: Decoder<ListerComponent> = {
  definitionName: \"ListerComponent\",
  schemaRef: \"#/definitions/ListerComponent\",

  decode(json: unknown): ListerComponent {
    return validateJson(
      json,
      ListerComponentValidator as Validator,
      ListerComponentDecoder.definitionName,
    );
  },
};
"
`;

exports[`custom-schema - standalone ES6 merged helpers.ts 1`] = `
"/* eslint-disable */

export interface Decoder<T> {
  definitionName: string;
  schemaRef: string;
  decode: (json: unknown) => T;
}
"
`;

exports[`custom-schema - standalone ES6 merged models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - standalone ES6 merged schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;

exports[`custom-schema - standalone ES6 merged validators.d.ts 1`] = `
"export function ScreenValidator(json: unknown): boolean;
export function ImageComponentValidator(json: unknown): boolean;
export function ListerComponentValidator(json: unknown): boolean;
"
`;

exports[`custom-schema - standalone ES6 models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - standalone ES6 schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;

exports[`custom-schema - standalone commonjs decoders ImageComponent decoder.ts 1`] = `
"/* eslint-disable */

import { Decoder } from \"../../helpers\";
import { validateJson, Validator } from \"../../validate\";
import { ImageComponent } from \"../../models\";
const { ImageComponentValidator } = require(\"./validator\");

export const ImageComponentDecoder: Decoder<ImageComponent> = {
  definitionName: \"ImageComponent\",
  schemaRef: \"#/definitions/ImageComponent\",

  decode(json: unknown): ImageComponent {
    return validateJson(
      json,
      ImageComponentValidator as Validator,
      ImageComponentDecoder.definitionName,
    );
  },
};
"
`;

exports[`custom-schema - standalone commonjs decoders index.ts 1`] = `
"/* eslint-disable */

export { ScreenDecoder } from \"./Screen/decoder\";
export { ImageComponentDecoder } from \"./ImageComponent/decoder\";
export { ListerComponentDecoder } from \"./ListerComponent/decoder\";
"
`;

exports[`custom-schema - standalone commonjs helpers.ts 1`] = `
"/* eslint-disable */

export interface Decoder<T> {
  definitionName: string;
  schemaRef: string;
  decode: (json: unknown) => T;
}
"
`;

exports[`custom-schema - standalone commonjs merged decoders 1`] = `
"/* eslint-disable */

import { Decoder } from \"./helpers\";
import { validateJson, Validator } from \"./validate\";
import { Screen, ImageComponent, ListerComponent } from \"./models\";
const {
  ScreenValidator,
  ImageComponentValidator,
  ListerComponentValidator,
} = require(\"./validators\");

export const ScreenDecoder: Decoder<Screen> = {
  definitionName: \"Screen\",
  schemaRef: \"#/definitions/Screen\",

  decode(json: unknown): Screen {
    return validateJson(
      json,
      ScreenValidator as Validator,
      ScreenDecoder.definitionName,
    );
  },
};
export const ImageComponentDecoder: Decoder<ImageComponent> = {
  definitionName: \"ImageComponent\",
  schemaRef: \"#/definitions/ImageComponent\",

  decode(json: unknown): ImageComponent {
    return validateJson(
      json,
      ImageComponentValidator as Validator,
      ImageComponentDecoder.definitionName,
    );
  },
};
export const ListerComponentDecoder: Decoder<ListerComponent> = {
  definitionName: \"ListerComponent\",
  schemaRef: \"#/definitions/ListerComponent\",

  decode(json: unknown): ListerComponent {
    return validateJson(
      json,
      ListerComponentValidator as Validator,
      ListerComponentDecoder.definitionName,
    );
  },
};
"
`;

exports[`custom-schema - standalone commonjs merged helpers.ts 1`] = `
"/* eslint-disable */

export interface Decoder<T> {
  definitionName: string;
  schemaRef: string;
  decode: (json: unknown) => T;
}
"
`;

exports[`custom-schema - standalone commonjs merged models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - standalone commonjs merged schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;

exports[`custom-schema - standalone commonjs models should match 1`] = `
"/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Component = TitleComponent | ImageComponent;
export type ListerComponent = (TitleComponent | ImageComponent)[];

export interface Screen {
  components: Component[];
}
/**
 * Title component
 */
export interface TitleComponent {
  type: \"title\";
  title: string;
  /**
   * some description
   */
  subtitle?: string | null;
  meta: Meta;
}
export interface Meta {
  dateTime: string;
}
export interface ImageComponent {
  type: \"image\";
  url: string;
  meta: Meta;
}
"
`;

exports[`custom-schema - standalone commonjs schema should match 1`] = `
"{
  \"type\": \"object\",
  \"title\": \"Schema\",
  \"definitions\": {
    \"Screen\": {
      \"type\": \"object\",
      \"properties\": {
        \"components\": {
          \"type\": \"array\",
          \"items\": {
            \"$ref\": \"#/definitions/Component\"
          }
        }
      },
      \"required\": [
        \"components\"
      ]
    },
    \"Component\": {
      \"anyOf\": [
        {
          \"$ref\": \"#/definitions/TitleComponent\"
        },
        {
          \"$ref\": \"#/definitions/ImageComponent\"
        }
      ]
    },
    \"TitleComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"title\"
          ]
        },
        \"title\": {
          \"type\": \"string\"
        },
        \"subtitle\": {
          \"type\": [
            \"string\",
            \"null\"
          ],
          \"description\": \"some description\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"title\",
        \"meta\"
      ],
      \"description\": \"Title component\"
    },
    \"ImageComponent\": {
      \"type\": \"object\",
      \"properties\": {
        \"type\": {
          \"type\": \"string\",
          \"enum\": [
            \"image\"
          ]
        },
        \"url\": {
          \"type\": \"string\"
        },
        \"meta\": {
          \"$ref\": \"#/definitions/Meta\"
        }
      },
      \"required\": [
        \"type\",
        \"url\",
        \"meta\"
      ]
    },
    \"Meta\": {
      \"type\": \"object\",
      \"properties\": {
        \"dateTime\": {
          \"type\": \"string\"
        }
      },
      \"required\": [
        \"dateTime\"
      ]
    },
    \"ListerComponent\": {
      \"type\": \"array\",
      \"items\": {
        \"anyOf\": [
          {
            \"$ref\": \"#/definitions/TitleComponent\"
          },
          {
            \"$ref\": \"#/definitions/ImageComponent\"
          }
        ]
      }
    }
  },
  \"properties\": {
    \"Screen\": {
      \"$ref\": \"#/definitions/Screen\"
    },
    \"Component\": {
      \"$ref\": \"#/definitions/Component\"
    },
    \"TitleComponent\": {
      \"$ref\": \"#/definitions/TitleComponent\"
    },
    \"ImageComponent\": {
      \"$ref\": \"#/definitions/ImageComponent\"
    },
    \"Meta\": {
      \"$ref\": \"#/definitions/Meta\"
    },
    \"ListerComponent\": {
      \"$ref\": \"#/definitions/ListerComponent\"
    }
  }
}"
`;
